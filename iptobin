#!/bin/bash

if [ -z "$1" ]; then
    echo "usage $0 ip/[subnet]"
    exit
fi

subnet=$(echo $1 | awk -F/ '{print $2}')
if [ -z "$subnet" ]
then ip=$1
else ip=$(echo $1 | awk -F/ '{print $1}')
fi

octets=(`echo $ip | awk -F. '{for (i=1; i<=NF; i++) print $i}'`)

if [ ${#octets[@]} -lt 4 ]; then
    n=$((${#octets[@]}))
    while [ $n -lt 4 ]; do
        octets[$n]=0;
        n=$((n+1))
    done
fi

if [ ${#octets[@]} -eq 4 ]; then
    valid=true
    for byte in $octets; do
        if [ $byte -gt 255 ]
            then valid=false
        fi
    done
else valid=false
fi

if [ "$valid" = true ]; then
    bin=("" "" "" "")
    for i in {0..3}; do
        byte=${octets[$i]}
        bits=0
        while [ $byte -gt 0 ]; do
            bin[$i]=$((byte % 2))${bin[$i]}
            byte=$((byte / 2))
            bits=$((bits + 1))
        done
        while [ $bits -lt 8 ]; do
            bin[$i]=0${bin[$i]}
            bits=$((bits+1))
        done
    done
    ip=$(echo ${bin[@]} | sed 's/\ /./g')
    if [ -z "$subnet" ]
    then echo $ip
    else
        if [ $subnet -gt 0 ] && [ $subnet -lt 32 ]; then
            hosts=$(((1 << (32-subnet)) - 2))
            subnet=$((subnet + (subnet/8)))
            a=${ip:0:$subnet}
            b=${ip:$subnet}
            echo $a/$b
            echo $hosts hosts supported
        else
            echo invalid subnet
        fi
    fi

else echo invalid ip
fi
